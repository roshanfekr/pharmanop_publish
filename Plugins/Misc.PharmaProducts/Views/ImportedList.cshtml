@model PharmaProductSearchModel
@using Nop.Plugin.Misc.Pharma.Models

@using System.Collections.Generic;


@{ 
    Layout = "_ConfigurePlugin";
    Html.AddCssFileParts("~/Plugins/PharmaProducts/Content/styles.css", excludeFromBundle: true);
    Html.SetActiveMenuItemSystemName("Products");
}


@{ const string hideSearchBlockAttributeName = "ProductListPage.HideSearchBlock";
    bool hideSearchBlock = false; }

<form asp-controller="Pharma" asp-action="List" method="post">

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                            <div class="search-text">@T("Admin.Common.Search")</div>
                            <div class="icon-search"><i class="fa fa-search" aria-hidden="true"></i></div>
                            <div class="icon-collapse"><i class="fa fa-angle-down" aria-hidden="true"></i></div>
                        </div>

                        <div class="search-body @(hideSearchBlock ? "closed" : "")">
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            <nop-label asp-for="SearchProductName" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-editor asp-for="SearchProductName" />
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            <nop-label asp-for="SearchType" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-editor asp-for="SearchType" />
                                        </div>
                                    </div>

                                </div>

                            </div>
                            <div class="row">
                                <div class="col-md-7 col-md-offset-5">
                                    <button type="button" id="search-products" class="btn btn-primary btn-search">
                                        <i class="fa fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-body">
                        @await Html.PartialAsync("Table", new DataTablesModel
                   {
                       Name = "pharma-products-grid",
                       UrlRead = new DataUrl("ImportedListSearch", "Pharma", null),
                       SearchButtonId = "search-products",
                       Length = Model.PageSize,
                       LengthMenu = Model.AvailablePageSizes,
                       Filters = new List<FilterParameter>
                                                                                                        {
                                new FilterParameter(nameof(Model.SearchProductName)),
                                new FilterParameter(nameof(Model.SearchType)),
                            },
                       ColumnCollection = new List<ColumnProperty>
                                                                                                        {
                                //new ColumnProperty(nameof(PharmaSourceProductModel.Id))
                                //{
                                //    IsMasterCheckBox = true,
                                //    Render = new RenderCheckBox("checkbox_products"),
                                //    ClassName =  NopColumnClassDefaults.CenterAll,
                                //    Width = "50"
                                //}
                                //,
                                new ColumnProperty(nameof(PharmaSourceProductModel.PersianName))
                                {
                                    Title = T("Nop.Plugin.Misc.PharmaProduct.Fields.PersianName").Text
                                }
                                ,
                                new ColumnProperty(nameof(PharmaSourceProductModel.GenericName))
                                {
                                    Title = T("Nop.Plugin.Misc.PharmaProduct.Fields.GenericName").Text
                                },
                                new ColumnProperty(nameof(PharmaSourceProductModel.BrandName))
                                {
                                    Title = T("Nop.Plugin.Misc.PharmaProduct.Fields.BrandName").Text
                                },
                                new ColumnProperty(nameof(PharmaSourceProductModel.UnitPrice))
                                {
                                    Title = T("Nop.Plugin.Misc.PharmaProduct.Fields.UnitPrice").Text
                                },
                                new ColumnProperty(nameof(PharmaSourceProductModel.Price))
                                {
                                    Title = T("Nop.Plugin.Misc.PharmaProduct.Fields.Price").Text
                                },
                                new ColumnProperty(nameof(PharmaSourceProductModel.PersianBrandName))
                                {
                                    Title = T("Nop.Plugin.Misc.PharmaProduct.Fields.PersianBrandName").Text
                                },
                                new ColumnProperty(nameof(PharmaSourceProductModel.NationalCode))
                                {
                                    Title = T("Nop.Plugin.Misc.PharmaProduct.Fields.NationalCode").Text,
                                    Width = "100",

                                },
                                new ColumnProperty(nameof(PharmaSourceProductModel.Id))
                                {
                                    Title = T("Nop.Plugin.Misc.PharmaProduct.Import").Text,
                                    Width = "100",
                                    ClassName =  NopColumnClassDefaults.Button,
                                    Render = new RenderCustom("renderColumnImport")
                                }
                            },


                   })


                        <script>
                            function renderColumnImport(data, type, row, meta) {
                                if (row.Imported)
                                    return '<button type="button" onclick="product_edit(' + row.ProductId + ')" class="btn btn-default">@T("Admin.Common.Edit")</button>';
                                else
                                    return '<button type="button" onclick="pharmaImport(' + row.Id + ')" class="btn btn-default">@T("Nop.Plugin.Misc.PharmaProduct.Import")</button>';

                            }

                            function pharmaImport(daruId ) {
                                //load "product details page" block
                                var pharmaActionUrl = '@Html.Raw(Url.Action("Import", "Pharma", new { id = "daru_id"}))';
                                pharmaActionUrl = pharmaActionUrl.replace("daru_id", daruId);
                                setLocation(pharmaActionUrl);
                            }
                            function product_edit(productId) {
                                //load "product details page" block
                                var productActionUrl = '@Html.Raw(Url.Action("Edit", "Product" , new { id = "product_id"}))';
                                productActionUrl = productActionUrl.replace("product_id", productId);
                                setLocation(productActionUrl);
                            }

                            $(document).ready(function () {
                                $('#delete-selected-action-confirmation-submit-button').bind('click', function () {
                                    var postData = {
                                        selectedIds: selectedIds
                                    };
                                    addAntiForgeryToken(postData);
                                    $.ajax({
                                        cache: false,
                                        type: "POST",
                                        url: "@(Url.Action("DeleteSelected", "Product"))",
                                        data: postData,
                                        error: function (jqXHR, textStatus, errorThrown) {
                                            $('#deleteSelectedFailed-info').text(errorThrown);
                                            $('#deleteSelectedFailed').click();
                                        },
                                        complete: function (jqXHR, textStatus) {
                                            updateTable('#products-grid');
                                        }
                                    });
                                    $('#delete-selected-action-confirmation').modal('toggle');
                                    return false;
                                });
                            });

                        </script>
                        <nop-alert asp-alert-id="deleteSelectedFailed" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>