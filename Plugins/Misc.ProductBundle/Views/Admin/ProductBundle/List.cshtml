@model ProductBundleSearchModel
@{
    Layout = "_AdminLayout";

    ViewBag.Title = "کالا های شگفت انگیز";

    //active menu item (system name)
    //Html.SetActiveMenuItemSystemName("Shipping.Alopeyk.Requests");
}

@using Nop.Plugin.Misc.ProductBundle.Model.Admin.ProductBundle

<nop-antiforgery-token />
<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("لیست شگفت انگیز ها")
    </h1>
    <div class="pull-right">
        <a asp-action="Create" class="btn bg-blue">
            <i class="fa fa-plus-square"></i>
            @T("Admin.Common.AddNew")
        </a>
    </div>
</div>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="search-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="ProductBundleCategoryId" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="ProductBundleCategoryId" asp-items="Model.AvailableProductBundleCategories" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="StartDate" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="StartDate" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="EndDate" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="EndDate" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*<div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-4">
                        <nop-label asp-for="ProductBundleCategoryId" />
                    </div>
                    <div class="col-md-8">
                        <nop-select asp-for="ProductBundleCategoryId" asp-items="Model.AvailableProductBundleCategories" />
                    </div>
                </div>
            </div>
        </div>*@
                        <div class="row">
                            <div class="col-md-7 col-md-offset-5">
                                <button type="button" id="search-requests" class="btn btn-primary btn-search">
                                    <i class="fa fa-search"></i>
                                    @T("Admin.Common.Search")
                                </button>
                            </div>
                        </div>
                    </div>

                    @await Html.PartialAsync("Table", new DataTablesModel
               {
                   Name = "product-bundle-grid",
                   UrlRead = new DataUrl("List", "ProductBundle", null),
                   UrlDelete = new DataUrl("DeleteAjax", "ProductBundle", null),
                   SearchButtonId = "search-requests",
                   Length = Model.PageSize,
                   LengthMenu = Model.AvailablePageSizes,
                   Filters = new List<FilterParameter>
                   {
                       //new FilterParameter(nameof(Model.ProductName)),
                       //new FilterParameter(nameof(Model.AmazingStatusId)),
                       new FilterParameter(nameof(Model.ProductBundleCategoryId)),
                       new FilterParameter(nameof(Model.StartDate)),
                       new FilterParameter(nameof(Model.EndDate))
                   },
                   ColumnCollection = new List<ColumnProperty>
                        {
                            new ColumnProperty(nameof(ProductBundleModel.ProductName))
                            {
                                Title = T("نام کالا").Text,
                                Width = "400"
                            },
                            new ColumnProperty(nameof(ProductBundleModel.ProductBundleCategoryName))
                            {
                                Title = T("نام دسته بندی").Text,
                                Width = "400"
                            },
                            new ColumnProperty(nameof(ProductBundleModel.Price))
                            {
                                Title = "قیمت",
                                Width = "100"
                            },
                            new ColumnProperty(nameof(ProductBundleModel.OldPrice))
                            {
                                Title = "قیمت قبلی",
                                Width = "100"
                            },
                            //new ColumnProperty(nameof(ProductBundleModel.IsAmazing))
                            //{
                            //    Title = "شگفت انگیز",
                            //    Width = "100",
                            //    ClassName = NopColumnClassDefaults.CenterAll,
                            //    Render = new RenderBoolean()
                            //},
                            new ColumnProperty(nameof(ProductBundleModel.AmazingStartDate))
                            {
                                Title = "تاریخ شروع",
                                Width = "100",
                                Render = new RenderDate()
                            },
                            new ColumnProperty(nameof(ProductBundleModel.AmazingEndDate))
                            {
                                Title = "تاریخ پایان",
                                Width = "100",
                                Render = new RenderDate()
                            },
                            new ColumnProperty(nameof(CategoryModel.Published))
                            {
                                Title = T("منتشر شده").Text,
                                Width = "100",
                                ClassName = NopColumnClassDefaults.CenterAll,
                                Render = new RenderBoolean()
                            },
                            new ColumnProperty(nameof(ProductBundleModel.Id))
                            {
                                Title = T("Admin.Common.Edit").Text,
                                Width = "100",
                                ClassName =  NopColumnClassDefaults.Button,
                                Render = new RenderButtonEdit(new DataUrl("Edit"))
                            },
                            new ColumnProperty(nameof(ProductBundleModel.Id))
                            {
                                Title = T("Admin.Common.Delete").Text,
                                Width = "100",
                                ClassName =  NopColumnClassDefaults.Button,
                                Render = new RenderButtonRemove(T("Admin.Common.Delete").Text)
                            }
                        }
               })
                </div>
            </div>
        </div>
    </div>
</div>
